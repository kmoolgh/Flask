# app.py  

from flask import Flask, request, jsonify  
from models import db, User, Post  
from config import Config  

app = Flask(__name__)  
app.config.from_object(Config)  
db.init_app(app)  

@app.before_first_request  
def create_tables():  
    db.create_all()  

# ایجاد کاربر  
@app.route('/users', methods=['POST'])  
def create_user():  
    username = request.json.get('username')  
    new_user = User(username=username)  
    db.session.add(new_user)  
    db.session.commit()  
    return jsonify({'message': f'کاربر {username} ایجاد شد!'}), 201  

# خواندن کاربران  
@app.route('/users', methods=['GET'])  
def get_users():  
    users = User.query.all()  
    return jsonify([{'id': user.id, 'username': user.username} for user in users])  

# ایجاد پست  
@app.route('/posts', methods=['POST'])  
def create_post():  
    data = request.get_json()  
    new_post = Post(title=data['title'], content=data['content'], user_id=data['user_id'])  
    db.session.add(new_post)  
    db.session.commit()  
    return jsonify({'message': 'پست ایجاد شد!'}), 201  

# خواندن پست‌ها  
@app.route('/posts', methods=['GET'])  
def get_posts():  
    posts = Post.query.all()  
    return jsonify([{'id': post.id, 'title': post.title, 'content': post.content, 'user_id': post.user_id} for post in posts])  

# بروزرسانی پست  
@app.route('/posts/<int:post_id>', methods=['PUT'])  
def update_post(post_id):  
    data = request.get_json()  
    post = Post.query.get(post_id)  
    if post:  
        post.title = data['title']  
        post.content = data['content']  
        db.session.commit()  
        return jsonify({'message': 'پست بروزرسانی شد!'}), 200  
    return jsonify({'message': 'پست پیدا نشد!'}), 404  

# حذف پست  
@app.route('/posts/<int:post_id>', methods=['DELETE'])  
def delete_post(post_id):  
    post = Post.query.get(post_id)  
    if post:  
        db.session.delete(post)  
        db.session.commit()  
        return jsonify({'message': 'پست حذف شد!'}), 200  
    return jsonify({'message': 'پست پیدا نشد!'}), 404  

if __name__ == '__main__':  
    app.run(debug=True)  
